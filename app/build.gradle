import com.android.ddmlib.DdmPreferences

apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'
//Retrolambda plugin
//apply plugin: 'me.tatarka.retrolambda'
apply from: 'build.workaround-missing-resource.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    dexOptions {
        dexInProcess true
        maxProcessCount 2
        javaMaxHeapSize "3g"
        incremental true
    }

    defaultConfig {
        applicationId "app.we.go.movies"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // for circleCI
        DdmPreferences.setTimeOut(60000)
        // Enabling multidex support.
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }


        buildTypes.each {
            it.buildConfigField 'String', 'TMDB_API_KEY', "\"$System.env.TMDB_API_KEY\""
        }
    }

    adbOptions {
        timeOutInMs 600000 // set timeout to 1 minute
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            testInstrumentationRunner = "app.we.go.movies.MockJUnitRunner"
        }
        prod {
        }
        instantRun {
            minSdkVersion 21
            targetSdkVersion 23
        }
    }

    // Remove mockRelease as it's not needed.
    //
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('instantRun')) {
            variant.setIgnore(true);
        }

    }


    sourceSets {
        String sharedTestDir = 'src/testCommon/java'
        androidTest {
            java.srcDirs += sharedTestDir
        }

        test {
            java.srcDirs += sharedTestDir
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/

repositories {
    mavenCentral()

}

final DAGGER_VERSION = '2.0.1'
final DEXMAKER_VERSION = '1.2'
final RUNNER_VERSION = '0.5'
final ESPRESSO_VERSION = '2.2.1'
final SUPPORT_VERSION = '23.1.1'
final RETROFIT_VERSION = '2.0.2'
final OKHTTP_VERSION = '3.2.0'
final BUTTERKNIFE_VERSION = '8.0.1'
final ASSERTJ_VERSION = '1.1.1'

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${SUPPORT_VERSION}"
    resolutionStrategy.force "com.android.support:support-v4:${SUPPORT_VERSION}"
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided "javax.annotation:jsr250-api:1.0"

    // dagger
    apt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    compile "com.google.dagger:dagger:${DAGGER_VERSION}"
    androidTestApt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    // support libraries
    compile "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_VERSION}"
    compile "com.android.support:support-v4:${SUPPORT_VERSION}"
    compile "com.android.support:design:${SUPPORT_VERSION}"
    compile "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    compile "com.google.code.gson:gson:2.2.4"
    // rx
    compile "io.reactivex:rxandroid:1.2.0"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:1.1.5"
    // cupboard
    compile "nl.qbusict:cupboard:2.1.4"
    compile "nl.2312:rxcupboard:0.7"
    // stetho
    compile "com.facebook.stetho:stetho:1.3.1"
    compile "com.facebook.stetho:stetho-okhttp3:1.3.1"
    // picasso
    compile "com.squareup.picasso:picasso:2.5.2"
    // retrofit
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"
    compile "com.squareup.retrofit2:retrofit-mock:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    // Butterknifeer
    apt "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"
    compile "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
    // multidex
    compile "com.android.support:multidex:1.0.0"
//    compile "com.android.support.test.espresso:espresso-idling-resource:${ESPRESSO_VERSION}"
    // widgets
    compile("com.github.yasevich:endless-recycler-view:1.1.0") {
    }
    // TESTING
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "com.squareup.retrofit2:retrofit-mock:${RETROFIT_VERSION}"
    androidTestCompile "com.android.support:support-v4:${SUPPORT_VERSION}"
    androidTestCompile "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestCompile "com.android.support.test:rules:${RUNNER_VERSION}"
    androidTestCompile "com.squareup.assertj:assertj-android:${ASSERTJ_VERSION}"
    // espresso
    androidTestCompile "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${ESPRESSO_VERSION}") {
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:${ESPRESSO_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    testCompile("com.squareup.assertj:assertj-android:${ASSERTJ_VERSION}") {
        exclude module: 'support-annotations'
    }
    //   apt 'org.parceler:parceler:1.0.4'
}




